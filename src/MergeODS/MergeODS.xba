<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="MergeODS" script:language="StarBasic">REM  *****  BASIC  *****

Function MainRun
	&apos;
	On Error Goto ErrorHandler
	Dim oDoc as Object
	Dim oSheet as Object
	Dim oData as Variant
	Dim oOrigData as Variant
	Dim oUrl as String
	Dim oRange as Variant
	Dim oCellType as Long
	Dim oEndRow as Integer
	Dim oCSV(2) As New com.sun.star.beans.PropertyValue
	&apos;
	&apos; 欄位編號
	Const CODEID 	= 0 &apos;所屬機關代碼
	Const DPART  	= 2 &apos;部門
	Const ID    	= 3 &apos;身分證號
	Const HOUR		= 7 &apos;時數
	Const COUNT		= 8 &apos;計數

	Dim oArr as Object
	GlobalScope.BasicLibraries.LoadLibrary(&quot;ScriptForge&quot;)
	oArr = CreateScriptService(&quot;Array&quot;)

	Dim fName() As Variant
	Dim oFileExt as String
	Dim oNameWithoutExt as String
	GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)

	fName = open_file()

	&apos; init oOrigData, OrigIdData
	oOrigData = Array()
	oOrigData = oArr.Append(oOrigData,Array(&quot;所屬機關代碼&quot;,&quot;所屬機關名稱&quot;,&quot;部門&quot;,&quot;身分證號&quot;,&quot;姓名&quot;,&quot;職稱&quot;,&quot;官職等&quot;,&quot;時數&quot;))
	&apos;
	Dim TotalFiles as Integer
   	For f = 0 to Ubound(fName)
   		&apos;
   		oFileExt = GetFileNameExtension(fName(f))
   		If oFileExt = &quot;csv&quot; Then
			oCSV(0).Name = &quot;FilterName&quot;
			oCSV(0).Value = &quot;scalc: Text - txt - csv (StarCalc)&quot;
			oCSV(1).Name = &quot;FilterOptions&quot;
			oCSV(1).Value = &quot;44/32,34,76,1,1/2/2/3/2/4/2&quot;
			oCSV(2).Name = &quot;Hidden&quot;
			oCSV(2).Value = true
		Else
			oCSV(0).Name = &quot;Hidden&quot;
			oCSV(0).Value = true
		End if
		&apos;
		oDoc = StarDesktop.loadComponentFromURL(fName(f), &quot;_default&quot;, 0, oCSV())
		oSheet = oDoc.getSheets().getByIndex(0)
		&apos;
		&apos; 檢查檔案欄位是否正確
		For a = 0 to 7
			oCell = oSheet.getCellByPosition(a,0)
			&apos;msgbox oCell.String
			If oCell.String &lt;&gt; oOrigData(0)(a) Then
				Dim url
				url = ConvertFromUrl(GetFileNameWithoutExtension(fName(f), &quot;/&quot;))
				msgbox &quot;檔案 : &quot; &amp; url &amp; &quot; &quot; &amp; &quot;含有不正確的資料欄位&quot;
				Goto ErrorHandler
			End if
		Next a
		&apos;
		oEndRow = CellAddress(oDoc) + 1
		TotalFiles = TotalFiles + oEndRow
		oDoc.dispose
	Next f
	&apos;
	&apos;msgbox &quot;匯入資料中...&quot;
	&apos; progress for import data
	ProgressBar(TotalFiles, 0.2, &quot;匯入資料中....&quot;)
	&apos;
   	For i = 0 to Ubound(fName)
   		oFileExt = GetFileNameExtension(fName(i))
		&apos; oCSV() 已存在不需要再定義
		oDoc = StarDesktop.loadComponentFromURL(fName(i), &quot;_default&quot;, 0, oCSV())
		oSheet = oDoc.getSheets().getByIndex(0)
		oEndRow = CellAddress(oDoc) + 1
		oRange = oSheet.getCellRangeByPosition(CODEID, 1, HOUR, oEndRow - 1)
		&apos;
		&apos;Get Data
		oData = oRange.getDataArray()
		&apos;追加
		For k = 0 To Ubound(oData)
			oOrigData = oArr.Append(oOrigData,oData(k))
		Next k
		&apos;
		&apos; close Doc
		oDoc.dispose
	Next i
	
	&apos; progress for export data
	ProgressBar(Ubound(oOrigData), 0.2,&quot;資料處理中請稍等...&quot;)
	&apos;
	&apos; 寫入到暫存檔案
	Dim oNewDoc as Object
	Dim oNewSheet as Object
	Dim oPasteRange as Object
	&apos;Dim Dummy()
		&apos;oNewDoc = StarDesktop.loadComponentFromURL(&quot;private:factory/scalc&quot;, &quot;_blank&quot;, 0, Dummy())
		oNewDoc = StarDesktop.loadComponentFromURL(&quot;private:factory/scalc&quot;, &quot;_blank&quot;, 0, oCSV())
		oNewSheet = oNewDoc.getSheets().getByIndex(0)
		oNewSheet.Name=&quot;Alldata&quot;
		oPasteRange = oNewSheet.getCellRangeByPosition(CODEID, 0, HOUR, Ubound(oOrigData))
		oPasteRange.setDataArray(oOrigData)
	&apos;
	&apos; add sheet for pilottable
	InsertSheet(oNewDoc, &quot;Pilot&quot;)
	&apos;
	&apos; create data pilottable (以身分字號和姓名為最前面欄位基準+數計數身分字號)
	oCreateDataPilotTable(oNewDoc, oPasteRange)
	oEndRow = CellAddress(oNewDoc) + 1
	&apos;
	&apos; add sheet for pilottable2
	InsertSheet(oNewDoc, &quot;Pilot2&quot;)
	&apos;
	&apos; create data pilottable2 (以身分字號為最前面欄位基準+總和時數)
	oCreateDataPilotTable2(oNewDoc, oPasteRange)
	&apos;
	&apos; remove Alldata sheet
	RemoveSheet(oNewDoc, &quot;Alldata&quot;)
	&apos;
	&apos; copy 總和時數 to sheet Pilot
	oCopyRange(oNewDoc, oEndRow, 1)
	&apos;
	&apos; remove Pilot2 sheet
	RemoveSheet(oNewDoc, &quot;Pilot2&quot;)
	&apos;
	&apos; filter 排除有上課的學生, (Ubound(fName)+1 = 課的總數)
	oPasteRange = oNewSheet.getCellRangeByPosition(CODEID, 0, COUNT, oEndRow)
	CountifsFilter(oNewDoc, oNewSheet, oPasteRange, Ubound(fName)+1)
	&apos;
	&apos; 刪除 pilottable
	oRemoveDataPilot(oNewSheet)
	&apos;
	&apos; 刪除之前欄位 (之前pilottable的空白欄位)
	RemoveCols(oNewSheet,0,9)
	&apos;
	&apos; 增加2個空白欄位在職稱欄位前
	InsertCellRight(oNewDoc, oNewSheet, oEndRow)
	&apos;
	&apos; copy 身分字號和姓名欄位至職稱欄位前
	oCopyRange(oNewDoc, oEndRow, 0)
	&apos;
	&apos; 刪除身分字號和姓名欄位(以copy到職稱欄位前)
	RemoveCols(oNewSheet,0,2)
	&apos;
	&apos; 刪除身分字號計數欄位
	RemoveCols(oNewSheet,7,1)
	&apos;
	&apos; 寫入到新檔案
	Dim oNewDoc2 as Object
	Dim oNewSheet2 as Object
	Dim oPasteRange2 as Object
	Dim Dummy2()
		oNewDoc2 = StarDesktop.loadComponentFromURL(&quot;private:factory/scalc&quot;, &quot;_blank&quot;, 0, Dummy2())
		oNewSheet2 = oNewDoc2.getSheets().getByIndex(0)
		oEndRow = CellAddress(oNewDoc) + 1
		oPasteRange = oNewSheet.getCellRangeByPosition(CodeId, 0, Count, oEndRow - 1)
		oPasteRange2 = oNewSheet2.getCellRangeByPosition(CodeId, 0, Count, oEndRow - 1)
		oPasteRange2.setDataArray(oPasteRange.getDataArray())
	oNewDoc.dispose
	&apos;
	&apos; 開啟自動篩選
	UnoSetAutoFlter(oNewDoc2, oNewSheet2)
	&apos;
	msgbox &quot;已匯出資料&quot;
ErrorHandler:
	Exit Function
End Function

Sub UnoSetAutoFlter(oDoc as Object, oSheet as Object)
	&apos;
	Dim oCtrl as Object, oFrame as Object
	Dim oDispatcher as Object
	Dim oEndRow as Integer

  		oCtrl = oDoc.getCurrentController()
  		oFrame   = oCtrl.getFrame()
		oDispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
  		&apos;
		oEndRow = CellAddress(oDoc) + 1
		oCtrl.select (oSheet.getCellRangeByPosition(0, 0, 7, oEndRow - 1))
 		&apos;設定 ON
		oDispatcher.executeDispatch(oFrame, &quot;.uno:DataFilterAutoFilter&quot;, &quot;&quot;, 0, Array())
End Sub

Sub CountifsFilter(oDoc as Object, oSheet as Object, oRange as Variant, classnum as Integer)
	&apos;
	Dim oCritRange &apos;Range that contains the filter criteria.
	Dim oDataRange &apos;Range that contains the data to filter.
	Dim oFiltDesc &apos;Filter descriptor.
	Dim oEndRow as Integer
	Dim oFields(1) As New com.sun.star.sheet.TableFilterField

	With oFields(0)
		.Field = 7 						&apos; Filter column I.
		.IsNumeric = True 				&apos; Use a number.
		.NumericValue = classnum 		&apos; Everything &gt;= classnum
		.Operator = com.sun.star.sheet.FilterOperator.EQUAL
	End With

	With oFields(1)
		.Connection = com.sun.star.sheet.FilterConnection.OR
		.Field = 8 						&apos; Filter column I.
		.IsNumeric = True 				&apos; Use a number.
		.NumericValue = 0 				&apos; Everything &gt;= classnum
		.Operator = com.sun.star.sheet.FilterOperator.GREATER
	End With

	REM Range that contains the filter criteria
	oSheet = oDoc.getSheets().getByIndex(0)
	oEndRow = CellAddress(oDoc) + 1
	oCritRange = oRange

	oSheet = oDoc.getSheets().getByIndex(0)
	oDataRange = oRange
	oFiltDesc = oCritRange.createFilterDescriptorByObject(oDataRange)

	oFiltDesc.setFilterFields(oFields())
	oFiltDesc.SkipDuplicates = True
	oFiltDesc.ContainsHeader = True

	oFiltDesc.CopyOutputData = True
	oFiltDesc.SaveOutputPosition = True

	Dim outputCell As New com.sun.star.table.CellAddress
	outputCell.Sheet = 0
	outputCell.Column = 9
	outputCell.Row = 0
	oFiltDesc.OutputPosition = outputCell
	&apos;
	oDataRange.filter(oFiltDesc)
End Sub

Sub RemoveCols(oSheet as Object, startcol as Integer, endcol as Integer)
	&apos;
	Dim oCols as Object
	&apos;
	oCols = oSheet.getColumns()
	oCols.removeByIndex(startcol, endcol)
End Sub

Function open_file() as Variant
	&apos;
	Dim file_dialog as Object
	Dim status as Integer
	Dim init_path as String
	Dim ucb as object
	Dim filterNames(3) as String
	
	filterNames(0) = &quot;*.*&quot;
	filterNames(1) = &quot;*.png&quot;
	filterNames(2) = &quot;*.jpg&quot;
	
	GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)
	file_dialog = CreateUnoService(&quot;com.sun.star.ui.dialogs.FilePicker&quot;)
	ucb = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	
	AddFiltersToDialog(FilterNames(), file_dialog)
	&apos;Set your initial path here!
	init_path = ConvertToUrl(&quot;/usr&quot;)
	
	file_dialog.setMultiSelectionMode(True)
	
	If ucb.Exists(init_path) Then
	   file_dialog.SetDisplayDirectory(init_path)
	End If
	
	status = file_dialog.Execute()
	If status = 1 Then
	   file_path = file_dialog.getSelectedFiles()
	   open_file = file_path
	Else
		MsgBox(&quot;未指定檔案&quot;, MB_OK + MB_ICONEXCLAMATION, &quot;warning!&quot;)
	End If
	file_dialog.Dispose()
 
End Function


&apos; 最終行取得
Function CellAddress(oDoc as Object) as Long
	Dim oSheet as Object
	Dim oCursor as Object
	Dim oCntrl as Object
	Dim oFrame as Object
	Dim oDispatcher as Object
	Dim oProp(1) as new com.sun.star.beans.PropertyValue
	Dim oShtEndRow as Long
	Dim oEndRow as Long
	Dim oDisp as String
	&apos;
	oSheet = oDoc.getSheets().getByIndex(0)
	oCursor = oSheet.createCursor()
	oShtEndRow  = oCursor.getRangeAddress().EndRow
	&apos;
	oCntrl = oDoc.getCurrentController()
	oFrame = oCntrl.Frame
	oDispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	&apos;
	oProp(0).Name = &quot;ToPoint&quot;
	oProp(0).Value = &quot;$D$&quot; &amp; oShtEndRow
	oProp(1).Name = &quot;Sel&quot;
	oProp(1).Value = false
	oDispatcher.executeDispatch( oFrame, &quot;.uno:GoToCell&quot;, &quot;&quot;, 0, oProp())
	&apos;
	oProp(0).Name = &quot;By&quot;
	oProp(0).Value = 1
	oProp(1).Name = &quot;Sel&quot;
	oProp(1).Value = false
	oDispatcher.executeDispatch( oFrame, &quot;.uno:GoUpToStartOfData&quot;, &quot;&quot;, 0, oProp())
	oEndRow = oCntrl.getSelection().getRangeAddress().EndRow
	&apos;
	oDisp = &quot;[ Address of End Row ]&quot; &amp; Chr$(10) &amp; &quot;End Row  = &quot; &amp; oEndRow

	CellAddress = oEndRow
End Function

Sub ProgressBar(Max as Integer, Mag as Integer, Msg as String)
&apos;Sub ProgressBar(Max as Long, WaitTime as Integer)
	&apos;
	Dim oProgressBar as Object, oProgressBarModel As Object, oDialog as Object
	Dim ProgressValue As Long
	Dim oSheet as Object
	Dim oCell as Object
    &apos;Dim ProgressValueMin as Integer
    &apos;Dim ProgressValueMax as Integer
	REM Dialog1 contains progress bar ProgressBar1 saved in standard library
	oDialog = LoadModelessDialog(&quot;MergeODS&quot;, &quot;ProgressBarDialog&quot;)
	oDialog.getControl(&quot;Label1&quot;).Text = Msg
	oDialog.visible = true
	&apos;DialogLibraries.loadLibrary(&quot;Standard&quot;)
	&apos;oDialog = CreateUnoDialog(DialogLibraries.MergeODS.ProgressBarDialog)
	REM progress bar settings

    &apos;ProgressValueMin = InputBox (&quot;Please enter a starting value:&quot;,&quot;Input Required&quot;)
    &apos;ProgressValueMax = InputBox (&quot;Please enter a ending value:&quot;,&quot;Input Required&quot;)
    &apos;ProgressValueMax = Max + Int(Max * 0.2)
    ProgressValueMax = Max - Int(Max * 0.2)

	Const ProgressValueMin = 0
	&apos;Const ProgressValueMax = Max
	Const ProgressStep = 4
	REM set minimum and maximum progress value
	oProgressBarModel = oDialog.getModel().getByName( &quot;ProgressBar1&quot; )
	oProgressBarModel.setPropertyValue( &quot;ProgressValueMin&quot;, ProgressValueMin)
	oProgressBarModel.setPropertyValue( &quot;ProgressValueMax&quot;, ProgressValueMax)
	REM show progress bar
	&apos;oDialog.setVisible( True )
	&apos;oDialog.GetControl(&quot;Label1&quot;).Text = Msg
	REM increase progress value every second

    &apos;oSheet=thiscomponent.getcurrentcontroller.activesheet
    &apos;oCell=oSheet.getCellByPosition(150,1)

	For ProgressValue = ProgressValueMin To ProgressValueMax Step ProgressStep
		oProgressBarModel.setPropertyValue( &quot;ProgressValue&quot;, ProgressValue )
	REM This is where you perform whatever action you are wanting
        &apos;oCell.SetString(ProgressValue)
		Wait 100 * Mag
	Next ProgressValue
    &apos;oCell.SetString(&quot;Done&quot;)
    &apos;oDialog.setVisible( False )
    oDialog.visible = false
End Sub

Sub oCreateDataPilotTable(oDoc as Object, oRange as Object)
	Dim oSheet
	&apos;Dim oRange
	Dim oRangeAddress
	Dim oTables
	Dim oTDescriptor
	Dim oAllFields
	Dim oField
	Dim oCellAddress as new com.sun.star.table.CellAddress
	&apos;
	Randomize(37)
	&apos;oRange = oDataPilotSource(&quot;Pilot&quot;)
	&apos;
	oRangeAddress = oRange.getRangeAddress()
	oCellAddress.Sheet = 1
	oCellAddress.Column = 0
	oCellAddress.Row = 0
	&apos;	
	oSheet = oDoc.Sheets.getByName(&quot;Pilot&quot;)
	oTables = oSheet.getDataPilotTables()
	&apos; Step1	Create the descriptor
	oTDescriptor = oTables.createDataPilotDescriptor()
	&apos; Step2	Set the Source Range
	oTDescriptor.setSourceRange(oRangeAddress)
	&apos; Step3 Set Attributes
	oTDescriptor.ColumnGrand = False
	oTDescriptor.RowGrand = False
	oTDescriptor.ShowFilterButton = False
	&apos; Step4	Set the fileds
	oAllFields = oTDescriptor.getDataPilotFields()
	&apos;
	&apos;Define to be the Column3 as a row item
	oField = oAllFields.getByIndex(3)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be the Column4 as a row item
	oField = oAllFields.getByIndex(4)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be the Column0 as a row item
	oField = oAllFields.getByIndex(0)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be the Column1 as a row item
	oField = oAllFields.getByIndex(1)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be the Column2 as a row item
	oField = oAllFields.getByIndex(2)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be the Column5 as a row item
	oField = oAllFields.getByIndex(5)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be the Column6 as a row item
	oField = oAllFields.getByIndex(6)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be Created a count in the data for the Column3
	oField = oAllFields.getByIndex(3)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.DATA
	oField.Function = com.sun.star.sheet.GeneralFunction.COUNT
	&apos;Define to be Created a sum in the data for the Column7
	&apos;oField = oAllFields.getByIndex(7)
	&apos;oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.DATA
	&apos;oField.Function = com.sun.star.sheet.GeneralFunction.SUM
	&apos;oField = oAllFields.getByIndex(3)
	&apos;oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.PAGE
	&apos;
	oTables.insertNewByName(&quot;MyFirstDataPilot&quot;, oCellAddress, oTDescriptor)
End Sub

Sub oCreateDataPilotTable2(oDoc as Object, oRange as Object)
	Dim oSheet
	&apos;Dim oRange
	Dim oRangeAddress
	Dim oTables
	Dim oTDescriptor
	Dim oAllFields
	Dim oField
	Dim oCellAddress as new com.sun.star.table.CellAddress
	&apos;
	Randomize(37)
	&apos;oRange = oDataPilotSource(&quot;Pilot&quot;)
	&apos;
	oRangeAddress = oRange.getRangeAddress()
	oCellAddress.Sheet = 2
	oCellAddress.Column = 0
	oCellAddress.Row = 0
	&apos;	
	oSheet = oDoc.Sheets.getByName(&quot;Pilot2&quot;)
	oTables = oSheet.getDataPilotTables()
	&apos; Step1	Create the descriptor
	oTDescriptor = oTables.createDataPilotDescriptor()
	&apos; Step2	Set the Source Range
	oTDescriptor.setSourceRange(oRangeAddress)
	&apos; Step3 Set Attributes
	oTDescriptor.ColumnGrand = False
	oTDescriptor.RowGrand = False
	oTDescriptor.ShowFilterButton = False
	&apos; Step4	Set the fileds
	oAllFields = oTDescriptor.getDataPilotFields()
	&apos;
	&apos;Define to be the Column3 as a row item
	oField = oAllFields.getByIndex(3)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be the Column0 as a row item
	oField = oAllFields.getByIndex(2)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;
	&apos;Define to be Created a sum in the data for the Column7
	oField = oAllFields.getByIndex(7)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.DATA
	oField.Function = com.sun.star.sheet.GeneralFunction.SUM
	&apos;
	oTables.insertNewByName(&quot;MyFirstDataPilot2&quot;, oCellAddress, oTDescriptor)
End Sub

Sub InsertSheet(oDoc as Object, SheetName as String)
	Dim oCtrl as Object, oFrame as Object
	Dim oDispatcher as Object
	Dim oProp(1) as New com.sun.star.beans.PropertyValue
		&apos;oDoc = ThisComponent
  		oCtrl = oDoc.getCurrentController()
  		oFrame = oCtrl.getFrame()
  		oDispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
  			oProp(0).Name = &quot;Name&quot;
  			oProp(0).Value = SheetName
  			oProp(1).Name = &quot;Index&quot;
  			oProp(1).Value = 32767
  		oDispatcher.executeDispatch( oFrame, &quot;.uno:Insert&quot;, &quot;&quot;, 0, oProp())
  		&apos;msgbox &quot;Success&quot;
End Sub

Sub RemoveSheet(oDoc as Object, SheetName as String)
	Dim oSheets as Object
	&apos;Dim oSheet as Object
	Dim nReturnCode as Integer
	&apos;Dim sSheetName as String
   		&apos;sSheetName = SheetName
   		oSheets = oDoc.getSheets()
   		If oSheets.hasByName( SheetName ) Then
     		oSheets.removeByName( SheetName )
   		End If
End Sub

Sub InsertCellRight(Doc as Object, oSheet as Object, EndRow as Integer)
	&apos;
    Dim CellRangeAddress as New com.sun.star.table.CellRangeAddress
	&apos;
   	CellRangeAddress.Sheet = 0
   	CellRangeAddress.StartColumn = 5
   	CellRangeAddress.StartRow = 0
   	CellRangeAddress.EndColumn = 6
   	CellRangeAddress.EndRow = EndRow
   	oSheet.insertCells(CellRangeAddress, com.sun.star.sheet.CellInsertMode.RIGHT)
   	&apos;msgbox &quot;Success&quot;
End Sub

Sub oCopyRange(oDoc as Object, EndRow as Integer, IsHours as Boolean)
	&apos;
	Dim oRangeAddress
	Dim oCellAddress
	Dim oSheet1 as Object, oSheet2 as Object
	&apos;
	If (IsHours) Then
		oSheet1 = oDoc.getSheets().getByIndex(0)
		oSheet2 = oDoc.getSheets().getByIndex(1)
		oRangeAddress = oSheet2.getCellRangeByPosition(2, 0, 2, EndRow).getRangeAddress()
		oCellAddress = oSheet1.getCellByPosition(8,0).getCellAddress()
		oSheet1.moveRange(oCellAddress, oRangeAddress)
	Else
		oSheet1 = oDoc.getSheets().getByIndex(0)
		oRangeAddress = oSheet1.getCellRangeByPosition(0, 0, 1, EndRow).getRangeAddress()
		oCellAddress = oSheet1.getCellByPosition(5,0).getCellAddress()
		oSheet1.moveRange(oCellAddress, oRangeAddress)
	End If
End Sub

Sub oRemoveDataPilot(oSheet as Object)
	&apos;Dim oSheet
		&apos;oSheet = ThisComponent.Sheets.getByName(&quot;Pilot&quot;)
		oTables = oSheet.getDataPilotTables()
		oRDescriptor = oTables.removeByName(&quot;MyFirstDataPilot&quot;)
End Sub

</script:module>