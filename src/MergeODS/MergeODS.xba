<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="MergeODS" script:language="StarBasic">REM  *****  BASIC  *****

function MainRun
	&apos;
	On Error Goto ErrorHandler
	Dim oDoc as Object
	Dim oSheet as Object
	Dim oData as Variant
	Dim oOrigData as Variant
	&apos;Dim IdData as Variant
	&apos;Dim OrigIdData as Variant
	Dim oUrl as String
	Dim oRange as Variant
	&apos;Dim IdRange as Variant
	Dim oCellType as Long
	Dim oEndRow as Integer
	Dim oCSV(2) As New com.sun.star.beans.PropertyValue

	Const CODEID 	= 0 &apos;所屬機關代碼
	Const DPART  	= 2 &apos;部門
	Const ID    	= 3 &apos;身分證號
	Const HOUR		= 7 &apos;時數
	Const COUNT		= 8 &apos;計數

	Dim oArr as Object
	GlobalScope.BasicLibraries.LoadLibrary(&quot;ScriptForge&quot;)
	oArr = CreateScriptService(&quot;Array&quot;)

	Dim fName() As Variant
	Dim oFileExt as String
	Dim oNameWithoutExt as String
	GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)

	fName = open_file()

	&apos; init oOrigData, OrigIdData
	oOrigData = Array()
	oOrigData = oArr.Append(oOrigData,Array(&quot;所屬機關代碼&quot;,&quot;所屬機關名稱&quot;,&quot;部門&quot;,&quot;身分證號&quot;,&quot;姓名&quot;,&quot;職稱&quot;,&quot;官職等&quot;,&quot;時數&quot;))
	&apos;OrigIdData = Array()
	&apos;
	Dim TotalFiles as Integer
   	for f = 0 to Ubound(fName)
   		&apos;
   		oFileExt = GetFileNameExtension(fName(f))
   		if oFileExt = &quot;csv&quot; then
			oCSV(0).Name = &quot;FilterName&quot;
			oCSV(0).Value = &quot;scalc: Text - txt - csv (StarCalc)&quot;
			oCSV(1).Name = &quot;FilterOptions&quot;
			oCSV(1).Value = &quot;44/32,34,76,1,1/2/2/3/2/4/2&quot;
			oCSV(2).Name = &quot;Hidden&quot;
			oCSV(2).Value = true
		else
			oCSV(0).Name = &quot;Hidden&quot;
			oCSV(0).Value = true
		end if
		&apos;
		oDoc = StarDesktop.loadComponentFromURL(fName(f), &quot;_default&quot;, 0, oCSV())
		oSheet = oDoc.getSheets().getByIndex(0)
		&apos;
		&apos; 檢查檔案欄位是否正確
		For a = 0 to 7
			oCell = oSheet.getCellByPosition(a,0)
			&apos;msgbox oCell.String
			If oCell.String &lt;&gt; oOrigData(0)(a) Then
				Dim url
				url = ConvertFromUrl(GetFileNameWithoutExtension(fName(f), &quot;/&quot;))
				msgbox &quot;檔案 : &quot; &amp; url &amp; &quot; &quot; &amp; &quot;含有不正確的資料欄位&quot;
				Goto ErrorHandler
			End if
		Next a
		&apos;
		oEndRow = CellAddress(oDoc) + 1
		TotalFiles = TotalFiles + oEndRow
		oDoc.dispose
	next f
	&apos;
	&apos;msgbox &quot;匯入資料中...&quot;
	&apos; progress for import data
	ProgressBar(TotalFiles, 0.2, &quot;匯入資料中....&quot;)
	&apos;
   	for i = 0 to Ubound(fName)
   		&apos;
   		oFileExt = GetFileNameExtension(fName(i))
   		&apos;if oFileExt = &quot;csv&quot; then
		&apos;	oCSV(0).Name = &quot;FilterName&quot;
		&apos;	oCSV(0).Value = &quot;scalc: Text - txt - csv (StarCalc)&quot;
		&apos;	oCSV(1).Name = &quot;FilterOptions&quot;
		&apos;	oCSV(1).Value = &quot;44/32,34,76,1,1/2/2/3/2/4/2&quot;
		&apos;	oCSV(2).Name = &quot;Hidden&quot;
		&apos;	oCSV(2).Value = true
		&apos;else
		&apos;	oCSV(0).Name = &quot;Hidden&quot;
		&apos;	oCSV(0).Value = true
		&apos;end if
		&apos;
		oDoc = StarDesktop.loadComponentFromURL(fName(i), &quot;_default&quot;, 0, oCSV())
		&apos;oNameWithoutExt = ConvertFromUrl(GetFileNameWithoutExtension(fName(i), &quot;/&quot;))
		&apos;oSheet = oDoc.getSheets().getByName(oNameWithoutExt)
		oSheet = oDoc.getSheets().getByIndex(0)
		oEndRow = CellAddress(oDoc) + 1
		oRange = oSheet.getCellRangeByPosition(CODEID, 1, HOUR, oEndRow - 1)
		&apos;IdRange = oSheet.getCellRangeByPosition(Id, 1, Id, oEndRow - 1)

		&apos;Get Data
		oData = oRange.getDataArray()
		&apos;IdData = IdRange.getDataArray()
		&apos;追加
		for k = 0 to Ubound(oData)
			oOrigData = oArr.Append(oOrigData,oData(k))
			&apos;OrigIdData = oArr.Append(OrigIdData,Join(IdData(k), &quot; : &quot;))
		next k

		&apos; close Doc
		oDoc.dispose
	next i
	
	&apos; progress for export data
	ProgressBar(Ubound(oOrigData), 0.2,&quot;資料處理中請稍等...&quot;)
	&apos;
	&apos; 寫入到暫存檔案
	Dim oNewDoc as Object
	Dim oNewSheet as Object
	Dim oPasteRange as Object
	&apos;Dim Dummy()
		&apos;oNewDoc = StarDesktop.loadComponentFromURL(&quot;private:factory/scalc&quot;, &quot;_blank&quot;, 0, Dummy())
		oNewDoc = StarDesktop.loadComponentFromURL(&quot;private:factory/scalc&quot;, &quot;_blank&quot;, 0, oCSV())
		oNewSheet = oNewDoc.getSheets().getByIndex(0)
		oPasteRange = oNewSheet.getCellRangeByPosition(CODEID, 0, HOUR, Ubound(oOrigData))
		oPasteRange.setDataArray(oOrigData)
	&apos;
	&apos; add count
	AddCounts(oNewDoc)
	oPasteRange = oNewSheet.getCellRangeByPosition(CODEID, 0, COUNT, Ubound(oOrigData))
	&apos;
	&apos; add sheet for pilottable
	InsertSheet(oNewDoc)

	&apos;msgbox &quot;資料處理中請稍等...&quot;
	&apos;
	&apos; create data pilottable
	oCreateDataPilotTable(oNewDoc, oPasteRange)
	&apos;
	&apos; 處理不重複資料
	SkipDuplicatesFilter(oNewDoc, oNewSheet, oPasteRange)
	&apos;
	&apos; 刪除之前欄位
	RemoveCols(oNewSheet)
	&apos;
	&apos; 做部門,身分字號,姓名升序排列
	oEndRow = CellAddress(oNewDoc) + 1
	oPasteRange = oNewSheet.getCellRangeByPosition(CODEID, 0, COUNT, oEndRow)
	SortByQuizScores(oNewDoc, oPasteRange)
	&apos;
	&apos; 將pilottable的計數貼到 sheet 0
	Dim pSheet as Object
	Dim pRange as Object
	pSheet = oNewDoc.getSheets().getByIndex(1)
	pRange = pSheet.getCellRangeByPosition(5, 0, 5, oEndRow)
	oPasteRange = oNewSheet.getCellRangeByPosition(COUNT, 0, COUNT, oEndRow)
	oPasteRange.setDataArray(pRange.getDataArray())
	&apos;
	&apos; 用標準篩選 + 條件刪除小於總缺課時數的人
	oPasteRange = oNewSheet.getCellRangeByPosition(CODEID, 0, COUNT+1, oEndRow)
	Dim totalclass as Integer
	totalclass = Ubound(fName) + 1
	AdvancedRangeFilter(oNewDoc, oNewSheet, oPasteRange, totalclass)
	&apos;
	&apos; 刪除之前欄位
	RemoveCols(oNewSheet)
	&apos;
	&apos; cleanclear
	cleanclear(oNewSheet)
	&apos;
	&apos; remove pilot sheet
	RemoveSheet(oNewDoc)
	&apos;
	&apos; 寫入到新檔案
	Dim oNewDoc2 as Object
	Dim oNewSheet2 as Object
	Dim oPasteRange2 as Object
	Dim Dummy2()
		oNewDoc2 = StarDesktop.loadComponentFromURL(&quot;private:factory/scalc&quot;, &quot;_blank&quot;, 0, Dummy2())
		oNewSheet2 = oNewDoc2.getSheets().getByIndex(0)
		oEndRow = CellAddress(oNewDoc) + 1
		oPasteRange = oNewSheet.getCellRangeByPosition(CodeId, 0, Count, oEndRow - 1)
		oPasteRange2 = oNewSheet2.getCellRangeByPosition(CodeId, 0, Count, oEndRow - 1)
		oPasteRange2.setDataArray(oPasteRange.getDataArray())
	oNewDoc.dispose
	&apos;
	&apos; 開啟自動篩選
	UnoSetAutoFlter(oNewDoc2, oNewSheet2)
	&apos;
	msgbox &quot;已匯出資料&quot;
ErrorHandler:
	exit function
End function

Sub UnoSetAutoFlter(oDoc as Object, oSheet as Object)
	&apos;
	Dim oCtrl as Object, oFrame as Object
	Dim oDispatcher as Object
	Dim oEndRow as Integer

  		oCtrl = oDoc.getCurrentController()
  		oFrame   = oCtrl.getFrame()
		oDispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
  		&apos;
		oEndRow = CellAddress(oDoc) + 1
		oCtrl.select (oSheet.getCellRangeByPosition(0, 0, 7, oEndRow - 1))
 		&apos;設定 ON
		oDispatcher.executeDispatch(oFrame, &quot;.uno:DataFilterAutoFilter&quot;, &quot;&quot;, 0, Array())
End Sub

Sub SkipDuplicatesFilter(oDoc as Object, oSheet as Object, oRange as Variant)
	&apos;
	Dim oCritRange &apos;Range that contains the filter criteria.
	Dim oDataRange &apos;Range that contains the data to filter.
	Dim oFiltDesc &apos;Filter descriptor.
	Dim oEndRow as Integer

	REM Range that contains the filter criteria
	oSheet = oDoc.getSheets().getByIndex(0)
	oEndRow = CellAddress(oDoc) + 1
	oCritRange = oRange

	oSheet = oDoc.getSheets().getByIndex(0)
	oDataRange = oRange
	oFiltDesc = oCritRange.createFilterDescriptorByObject(oDataRange)

	oFiltDesc.SkipDuplicates = True
	oFiltDesc.ContainsHeader = True

	oFiltDesc.CopyOutputData = True
	oFiltDesc.SaveOutputPosition = True

	Dim outputCell As New com.sun.star.table.CellAddress
	outputCell.Sheet = 0
	outputCell.Column = 9
	outputCell.Row = 0
	oFiltDesc.OutputPosition = outputCell
	&apos;
	oDataRange.filter(oFiltDesc)
End Sub

Sub AdvancedRangeFilter(oDoc as Object, oSheet as Object, oRange as Variant, classnum as Integer)
	&apos;
	Dim oCritRange &apos;Range that contains the filter criteria.
	Dim oDataRange &apos;Range that contains the data to filter.
	Dim oFiltDesc &apos;Filter descriptor.
	Dim oEndRow as Integer
	Dim oFields(0) As New com.sun.star.sheet.TableFilterField

	REM Setup a field to view cells with content that
	REM start with the letter b.
	With oFields(0)
		.Field = 8 						&apos; Filter column I.
		.IsNumeric = True 				&apos; Use a number.
		.NumericValue = classnum 		&apos; Everything &gt;= classnum
		.Operator = com.sun.star.sheet.FilterOperator.GREATER_EQUAL
	End With

	REM Range that contains the filter criteria
	oSheet = oDoc.getSheets().getByIndex(0)
	oEndRow = CellAddress(oDoc) + 1
	oCritRange = oRange

	oSheet = oDoc.getSheets().getByIndex(0)
	oDataRange = oRange
	oFiltDesc = oCritRange.createFilterDescriptorByObject(oDataRange)

	oFiltDesc.setFilterFields(oFields())
	oFiltDesc.SkipDuplicates = True
	oFiltDesc.ContainsHeader = True

	oFiltDesc.CopyOutputData = True
	oFiltDesc.SaveOutputPosition = True

	Dim outputCell As New com.sun.star.table.CellAddress
	outputCell.Sheet = 0
	outputCell.Column = 9
	outputCell.Row = 0
	oFiltDesc.OutputPosition = outputCell
	&apos;
	oDataRange.filter(oFiltDesc)
End Sub

Sub RemoveCols(oSheet as Object)
	&apos;
	Dim oCols as Object
	&apos;
	oCols = oSheet.getColumns()
	oCols.removeByIndex(0, 9)
End Sub

Function open_file() as Variant
	&apos;
	Dim file_dialog as Object
	Dim status as Integer
	Dim init_path as String
	Dim ucb as object
	Dim filterNames(3) as String
	
	filterNames(0) = &quot;*.*&quot;
	filterNames(1) = &quot;*.png&quot;
	filterNames(2) = &quot;*.jpg&quot;
	
	GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)
	file_dialog = CreateUnoService(&quot;com.sun.star.ui.dialogs.FilePicker&quot;)
	ucb = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	
	AddFiltersToDialog(FilterNames(), file_dialog)
	&apos;Set your initial path here!
	init_path = ConvertToUrl(&quot;/usr&quot;)
	
	file_dialog.setMultiSelectionMode(True)
	
	If ucb.Exists(init_path) Then
	   file_dialog.SetDisplayDirectory(init_path)
	End If
	
	status = file_dialog.Execute()
	If status = 1 Then
	   file_path = file_dialog.getSelectedFiles()
	   open_file = file_path
	Else
		MsgBox(&quot;未指定檔案&quot;, MB_OK + MB_ICONEXCLAMATION, &quot;warning!&quot;)
	End If
	file_dialog.Dispose()
 
End Function


&apos; 最終行取得
Function CellAddress(oDoc as Object) as Long
	Dim oSheet as Object
	Dim oCursor as Object
	Dim oCntrl as Object
	Dim oFrame as Object
	Dim oDispatcher as Object
	Dim oProp(1) as new com.sun.star.beans.PropertyValue
	Dim oShtEndRow as Long
	Dim oEndRow as Long
	Dim oDisp as String
	&apos;
	oSheet = oDoc.getSheets().getByIndex(0)
	oCursor = oSheet.createCursor()
	oShtEndRow  = oCursor.getRangeAddress().EndRow
	&apos;
	oCntrl = oDoc.getCurrentController()
	oFrame = oCntrl.Frame
	oDispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	&apos;
	oProp(0).Name = &quot;ToPoint&quot;
	oProp(0).Value = &quot;$D$&quot; &amp; oShtEndRow
	oProp(1).Name = &quot;Sel&quot;
	oProp(1).Value = false
	oDispatcher.executeDispatch( oFrame, &quot;.uno:GoToCell&quot;, &quot;&quot;, 0, oProp())
	&apos;
	oProp(0).Name = &quot;By&quot;
	oProp(0).Value = 1
	oProp(1).Name = &quot;Sel&quot;
	oProp(1).Value = false
	oDispatcher.executeDispatch( oFrame, &quot;.uno:GoUpToStartOfData&quot;, &quot;&quot;, 0, oProp())
	oEndRow = oCntrl.getSelection().getRangeAddress().EndRow
	&apos;
	oDisp = &quot;[ Address of End Row ]&quot; &amp; Chr$(10) &amp; &quot;End Row  = &quot; &amp; oEndRow

	CellAddress = oEndRow
End Function

Sub ProgressBar(Max as Integer, Mag as Integer, Msg as String)
&apos;Sub ProgressBar(Max as Long, WaitTime as Integer)
	&apos;
	Dim oProgressBar as Object, oProgressBarModel As Object, oDialog as Object
	Dim ProgressValue As Long
	Dim oSheet as Object
	Dim oCell as Object
    &apos;Dim ProgressValueMin as Integer
    &apos;Dim ProgressValueMax as Integer
	REM Dialog1 contains progress bar ProgressBar1 saved in standard library
	oDialog = LoadModelessDialog(&quot;MergeODS&quot;, &quot;ProgressBarDialog&quot;)
	oDialog.getControl(&quot;Label1&quot;).Text = Msg
	oDialog.visible = true
	&apos;DialogLibraries.loadLibrary(&quot;Standard&quot;)
	&apos;oDialog = CreateUnoDialog(DialogLibraries.MergeODS.ProgressBarDialog)
	REM progress bar settings

    &apos;ProgressValueMin = InputBox (&quot;Please enter a starting value:&quot;,&quot;Input Required&quot;)
    &apos;ProgressValueMax = InputBox (&quot;Please enter a ending value:&quot;,&quot;Input Required&quot;)
    &apos;ProgressValueMax = Max + Int(Max * 0.2)
    ProgressValueMax = Max - Int(Max * 0.2)

	Const ProgressValueMin = 0
	&apos;Const ProgressValueMax = Max
	Const ProgressStep = 4
	REM set minimum and maximum progress value
	oProgressBarModel = oDialog.getModel().getByName( &quot;ProgressBar1&quot; )
	oProgressBarModel.setPropertyValue( &quot;ProgressValueMin&quot;, ProgressValueMin)
	oProgressBarModel.setPropertyValue( &quot;ProgressValueMax&quot;, ProgressValueMax)
	REM show progress bar
	&apos;oDialog.setVisible( True )
	&apos;oDialog.GetControl(&quot;Label1&quot;).Text = Msg
	REM increase progress value every second

    &apos;oSheet=thiscomponent.getcurrentcontroller.activesheet
    &apos;oCell=oSheet.getCellByPosition(150,1)

	For ProgressValue = ProgressValueMin To ProgressValueMax Step ProgressStep
		oProgressBarModel.setPropertyValue( &quot;ProgressValue&quot;, ProgressValue )
	REM This is where you perform whatever action you are wanting
        &apos;oCell.SetString(ProgressValue)
		Wait 100 * Mag
	Next ProgressValue
    &apos;oCell.SetString(&quot;Done&quot;)
    &apos;oDialog.setVisible( False )
    oDialog.visible = false
End Sub

Sub SortByQuizScores(oDoc as Object, oRange as Object)
	Dim oSheet
	&apos;Dim oRange
	Dim oSortFields(2) as new com.sun.star.util.SortField
	Dim oSortDesc(0) as new com.sun.star.beans.PropertyValue
	oSheet = oDoc.Sheets(0)
	REM Set the range on which to sort
	&apos;oRange = oSheet.getCellRangeByName(&quot;A1:H530&quot;)
	REM Sort by the Quiz #1 field in the range
	oSortFields(0).Field = 2
	oSortFields(0).SortAscending = True
	oSortFields(0).FieldType = com.sun.star.util.SortFieldType.ALPHANUMERIC
	REM Sort by the Quiz #2 field in the range
	oSortFields(1).Field = 3
	oSortFields(1).SortAscending = True
	oSortFields(1).FieldType = com.sun.star.util.SortFieldType.ALPHANUMERIC
	REM Sort by the Quiz #2 field in the range
	oSortFields(2).Field = 4
	oSortFields(2).SortAscending = True
	oSortFields(2).FieldType = com.sun.star.util.SortFieldType.ALPHANUMERIC
	REM Set the sort fields to use
	oSortDesc(0).Name = &quot;SortFields&quot;
	oSortDesc(0).Value = oSortFields()
	REM Now sort the range!
	oRange.Sort(oSortDesc())
End Sub

sub AddCounts(oDoc as Object)
	&apos;
	Dim oSheet as Object
	Dim oEndRow as Integer
	&apos;
	oSheet = oDoc.getSheets().getByIndex(0)
	oEndRow = CellAddress(oDoc)
	oSheet.getCellByPosition(8,0).String = &quot;Count&quot;
	&apos;
	For i = 1 To oEndRow
		oSheet.getCellByPosition(8,i).Value = 1
	Next i
end sub

Sub oCreateDataPilotTable(oDoc as Object, oRange as Object)
	Dim oSheet
	&apos;Dim oRange
	Dim oRangeAddress
	Dim oTables
	Dim oTDescriptor
	Dim oAllFields
	Dim oField
	Dim oCellAddress as new com.sun.star.table.CellAddress
	&apos;
	Randomize(37)
	&apos;oRange = oDataPilotSource(&quot;Pilot&quot;)
	&apos;
	oRangeAddress = oRange.getRangeAddress()
	oCellAddress.Sheet = 1
	oCellAddress.Column = 0
	oCellAddress.Row = 0
	&apos;	
	oSheet = oDoc.Sheets.getByName(&quot;Pilot&quot;)
	oTables = oSheet.getDataPilotTables()
	&apos; Step1	Create the descriptor
	oTDescriptor = oTables.createDataPilotDescriptor()
	&apos; Step2	Set the Source Range
	oTDescriptor.setSourceRange(oRangeAddress)
	&apos; Step3 Set Attributes
	oTDescriptor.ColumnGrand = False
	oTDescriptor.RowGrand = False
	oTDescriptor.ShowFilterButton = False
	&apos; Step4	Set the fileds
	oAllFields = oTDescriptor.getDataPilotFields()
	&apos;
	&apos;Define to be the Column0 as a row item
	oField = oAllFields.getByIndex(0)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be the Column1 as a row item
	oField = oAllFields.getByIndex(1)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be the Column2 as a row item
	oField = oAllFields.getByIndex(2)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be the Column3 as a row item
	oField = oAllFields.getByIndex(3)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be the Column3 as a row item
	oField = oAllFields.getByIndex(4)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.ROW
	&apos;Define to be Created a sum in the data for the Column3
	oField = oAllFields.getByIndex(8)
	oField.Orientation = com.sun.star.sheet.DataPilotFieldOrientation.DATA
	oField.Function = com.sun.star.sheet.GeneralFunction.SUM
	&apos;
	oTables.insertNewByName(&quot;MyFirstDataPilot&quot;, oCellAddress, oTDescriptor)
		
End Sub

Sub InsertSheet(oDoc as Object)
	Dim oCtrl as Object, oFrame as Object
	Dim oDispatcher as Object
	Dim oProp(1) as new com.sun.star.beans.PropertyValue
		&apos;oDoc = ThisComponent
  		oCtrl = oDoc.getCurrentController()
  		oFrame = oCtrl.getFrame()
  		oDispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
  			oProp(0).Name = &quot;Name&quot;
  			oProp(0).Value = &quot;Pilot&quot;
  			oProp(1).Name = &quot;Index&quot;
  			oProp(1).Value = 32767
  		oDispatcher.executeDispatch( oFrame, &quot;.uno:Insert&quot;, &quot;&quot;, 0, oProp())
  		&apos;msgbox &quot;Success&quot;
End Sub

Sub cleanclear(oSheet as Object)
	&apos;
	Dim oCols as Object
	&apos;
	oCols = oSheet.getColumns()
	oCols.removeByIndex(8, 9)
End Sub

Sub RemoveSheet(oDoc as Object)
	Dim oSheets As Object
	Dim oSheet As Object
	Dim nReturnCode As Integer
	Dim sSheetName As String
   		sSheetName = &quot;Pilot&quot;
   		oSheets = oDoc.getSheets()
   		If oSheets.hasByName( sSheetName ) Then
     		oSheets.removeByName( sSheetName )
   		End If
End Sub
</script:module>